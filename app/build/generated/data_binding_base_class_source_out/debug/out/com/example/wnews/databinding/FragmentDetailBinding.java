// Generated by view binder compiler. Do not edit!
package com.example.wnews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.wnews.R;
import com.facebook.drawee.view.SimpleDraweeView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SimpleDraweeView bgImageUrl;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageButton imageButtonBackDetail;

  @NonNull
  public final ImageButton imageButtonLikeDetail;

  @NonNull
  public final TextView textViewDetail;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final Toolbar toolbar;

  private FragmentDetailBinding(@NonNull LinearLayout rootView,
      @NonNull SimpleDraweeView bgImageUrl, @NonNull ConstraintLayout constraintLayout,
      @NonNull ImageButton imageButtonBackDetail, @NonNull ImageButton imageButtonLikeDetail,
      @NonNull TextView textViewDetail, @NonNull TextView textViewTitle, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.bgImageUrl = bgImageUrl;
    this.constraintLayout = constraintLayout;
    this.imageButtonBackDetail = imageButtonBackDetail;
    this.imageButtonLikeDetail = imageButtonLikeDetail;
    this.textViewDetail = textViewDetail;
    this.textViewTitle = textViewTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bg_imageUrl;
      SimpleDraweeView bgImageUrl = rootView.findViewById(id);
      if (bgImageUrl == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.image_button_back_detail;
      ImageButton imageButtonBackDetail = rootView.findViewById(id);
      if (imageButtonBackDetail == null) {
        break missingId;
      }

      id = R.id.image_button_like_detail;
      ImageButton imageButtonLikeDetail = rootView.findViewById(id);
      if (imageButtonLikeDetail == null) {
        break missingId;
      }

      id = R.id.text_view_detail;
      TextView textViewDetail = rootView.findViewById(id);
      if (textViewDetail == null) {
        break missingId;
      }

      id = R.id.text_view_title;
      TextView textViewTitle = rootView.findViewById(id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentDetailBinding((LinearLayout) rootView, bgImageUrl, constraintLayout,
          imageButtonBackDetail, imageButtonLikeDetail, textViewDetail, textViewTitle, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
